{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2024-10-02T12:28:07.621Z",
    "end": "2024-10-02T12:28:21.320Z",
    "duration": 13699,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "fd251484-0c13-4c49-b4cb-4f00d5bb2dde",
      "title": "",
      "fullFile": "cypress/integration/fanCodeTodo.spec.js",
      "file": "cypress/integration/fanCodeTodo.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "dfd99e2d-17c5-4c34-a820-77baef38b006",
          "title": "FanCode City Users Todo Completion",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "All FanCode users should have completed more than 50% of their todos",
              "fullTitle": "FanCode City Users Todo Completion All FanCode users should have completed more than 50% of their todos",
              "timedOut": null,
              "duration": 13641,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request(_constants.USERS_API).then(response => {\n  const users = response.body;\n  cy.task('log', `Fetched Users: ${JSON.stringify(users)}`);\n  const fanCodeUsers = users.filter(_fanCodeHelper.isFanCodeCity);\n  cy.task('log', `Filtered FanCode Users: ${JSON.stringify(fanCodeUsers)}`);\n  const requests = fanCodeUsers.map(user => {\n    return cy.request(`${_constants.TODOS_API}?userId=${user.id}`).then(todoResponse => {\n      const todos = todoResponse.body;\n      const completedTasks = todos.filter(todo => todo.completed).length;\n      const completedPercentage = completedTasks / todos.length * 100;\n      userCompletionData.push({\n        name: user.name,\n        completedTasks,\n        totalTasks: todos.length,\n        completedPercentage\n      });\n      cy.task('log', `User: ${user.name}, Completed Tasks: ${completedTasks}, Total Tasks: ${todos.length}, Completion Percentage: ${completedPercentage}%`);\n      expect(completedPercentage).to.be.greaterThan(50);\n    });\n  });\n  return Cypress.Promise.all(requests);\n}).then(() => {\n  const summaryTable = (0, _fanCodeHelper.generateSummaryTable)(userCompletionData);\n  // Write the summary table to a JSON file\n  cy.task('writeSummaryTable', summaryTable).then(() => {\n    cy.task('log', 'Summary table written to file successfully.');\n  });\n});",
              "err": {},
              "uuid": "b2bf5d1d-8424-4446-8f12-75ce9669b4d7",
              "parentUUID": "dfd99e2d-17c5-4c34-a820-77baef38b006",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b2bf5d1d-8424-4446-8f12-75ce9669b4d7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13641,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/results",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}